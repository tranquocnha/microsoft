server:
  port: ${PORT:8088}

spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_DATABASE:booking}?createDatabaseIfNotExist=true
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:admin}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update

#rabbitmq conf
  rabbitmq:
    host: 178.128.223.53
    port: 5672
    username: guest
    password: 123456
  listener:
    simple:
      acknowledge-mode: manual
      max-concurrency: 10
      concurrency: 2
      retry:
        enabled: true
        initial-interval: 3s
        max-attempts: 3
        max-interval: 10s
        multiplier: 2

rabbitmq:
  payment:
    queue : Payment_Demo
    exchange: payment-exchange
    routingkey: payment-exchange
  rate-review:
    queue : ratereview-start
    exchange: ratereview-exchange
    routingkey: ratereview_start_key
  rate-review-complete:
    queue : ratereview-complete
    exchange: ratereview-exchange
    routingkey: ratereview_complete_key

springdoc:
  api-docs:
    path : /api-docs
service:
  vehicle:
    local:
      domain: http://localhost:8080
      url: /v1/api/vehicles/
  identity:
    local:
      domain: http://127.0.0.1:8082
      url: /api/v1/auth/v1/user?token=
